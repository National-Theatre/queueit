<?php

/**
 * @file
 * Module's installation file.
 */

/**
 * Implements hook_requirements().
 */
function queueit_requirements($phase) {
  $requirements = array();
  $int_method = variable_get('queueit_mode', 'integration');

  if ($phase == 'runtime') {
    $t = get_t();
    $description = '';
    $severity = REQUIREMENT_OK;
    $value = '';
    switch ($int_method) {
      case 'js':
        $known_user = new QueueitKnownUser();
        $js_exists = $known_user->validateJsEndpoints();
        $severity = $js_exists
          ? REQUIREMENT_OK
          : REQUIREMENT_ERROR;
        $value = $js_exists
          ? $t("JS files validated.")
          : $t("Problem accessing external JS files.");
        break;

      case 'code':
      case 'integration':
        $known_user_lib = drupal_get_library('queueit', 'queueit/KnownUser');
        $known_user_exists = file_exists(libraries_get_path('composer') . '/queueit/knownuserv3' . '/KnownUser.php');
        $exists = $known_user_lib && $known_user_exists;
        $severity = $exists ? REQUIREMENT_OK : REQUIREMENT_ERROR;
        $value = $t('%lib library %state.',
          [
            '%lib' => 'KnownUser.V3.PHP',
            '%state' => $exists ? 'installed' : 'not installed',
          ]);
        module_load_include('php', 'queueit', 'src/classes/QueueitBase');
        if ($exists && class_exists('QueueitBase') && !((new QueueitBase)->validateConfig())) {
          $value .= '&nbsp;' . $t("But not configured correctly. Check the configuration page.");
          $severity = REQUIREMENT_WARNING;
        }
        else {
          $queueit = new QueueitBase();
          $config = $queueit->getIntegrationConfig();
          $severity = $config ? REQUIREMENT_OK : REQUIREMENT_WARNING;
          $description = json_encode(json_decode($config), TRUE);
        }
      break;
    }
    $requirements['queueit'] = array(
      'title' => $t('Queue-it'),
      'description' => $description,
      'severity' => $severity,
      'value' => $value,
    );
  }

  return $requirements;
}
