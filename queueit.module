<?php

/**
 * @file
 * Queue-it main module file.
 */

/**
 * Implements hook_help().
 */
function queueit_help($path, $arg) {
  // Load help content from the README file.
  $content = file_get_contents(drupal_get_path('module', 'queueit') . '/README.md');
  $content .= file_get_contents(libraries_get_path('composer') . '/queueit/KnownUser.V3.PHP' . '/README.md');
  module_load_include('inc', 'queueit');
  switch ($path) {
    // Main module help for the queueit module
    case 'admin/help#queueit':
      return '<p>' . queueit_md2html($content) . '</p>';
  }
}

/**
 * Implements hook_init().
 */
function queueit_init() {
  if (user_access('bypass queueit')) {
    //return;
  }
}

/**
 * Implements hook_menu().
 */
function queueit_menu() {
  $items = array();
  $items['admin/config/services/queueit'] = array(
    'title' => 'Queue-it settings',
    'description' => 'Configure settings for Queue-it.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('queueit_settings_form'),
    'access arguments' => array('administer queueit'),
    'file' => 'queueit.admin.inc',
  );

  return $items;
}

/** 
 * Implements hook_library().
 */
function queueit_library() {
  // Register libraries available in the external directory.
  $path = libraries_get_path('composer') . '/queueit/KnownUser.V3.PHP';
  $libraries['queueit/KnownUser'] = array(
    'title' => 'KnownUser.V3.PHP',
    'version' => '3',
  );    
	return $libraries;
}

/**
 * Implements hook_permission().
 */
function queueit_permission() {
  $permissions = array();
  $permissions['bypass queueit'] = array(
    'title' => t('Bypass Queue-it'),
    'description' => t('Exclude the queue system for the selected roles.'),
  );
  $permissions['administer queueit'] = array(
    'title' => t('Administer Queue-it'),
    'description' => t('Configure Queue-it settings and credentials. Warning: Give to trusted roles only.'),
  );

  return $permissions;
}
